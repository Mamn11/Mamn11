{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "collapsed_sections": [],
      "authorship_tag": "ABX9TyOQrPS/l4Fa1BdIW/8mk6nI",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Mamn11/Mamn11/blob/main/gaal\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 8,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 214
        },
        "id": "T34IymK8RhlS",
        "outputId": "29fd2503-194f-4643-e27e-a5584fb2d90e"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<seaborn.axisgrid.PairGrid at 0x7f2dd308c590>"
            ]
          },
          "metadata": {},
          "execution_count": 8
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 180x180 with 2 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "import pandas as pd\n",
        "\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "\n",
        "%matplotlib inline\n",
        "\n",
        "\n",
        "url = '/kills.csv'\n",
        "\n",
        "df = pd.read_csv(url)\n",
        "\n",
        "df.head(20)\n",
        "\n",
        "\n",
        "sns.pairplot(df)\n",
        "\n"
      ]
    }
  ]
}